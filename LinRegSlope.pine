// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © Siarhei Keulich @ferradura
//@version=4
study(title="Linear Regression Slope", shorttitle="LRS", overlay=true)

src = close
len = input(defval=96, minval=1, title="Linear Regression Length")
range = input(defval=2,minval=0.5, step=0.1, title="LR channel width")
r2 = input(title="Range 2?", type=input.bool, defval=true)
range2 = input(defval=4,minval=0.5, step=0.1, title="range 2 width")

lrc = linreg(src, len, 0)
lrc_p = linreg(src, len, 1)

x = bar_index
slope = lrc - lrc_p
intercept = lrc - x*slope
deviationSum = 0.0
for i=0 to (len-1)
    deviationSum:= deviationSum + pow(src[i]-(slope*(x-i)+intercept), 2)  
deviation = sqrt(deviationSum/(len))
up_lr = lrc + deviation*range
low_lr = lrc - deviation*range
up_lr2 = r2 ? lrc + deviation*range2 : na
low_lr2 = r2 ? lrc - deviation*range2 :na

plot(lrc, color = color.purple, title = "Linear Regression Curve", style = plot.style_line, linewidth = 3)
plot(up_lr, color = color.red, title = "UpB", style = plot.style_line, linewidth = 2)
plot(low_lr, color = color.green, title = "LowB", style = plot.style_line, linewidth = 2)

plot(up_lr2, color = color.red, title = "LR high", style = plot.style_line, linewidth = 1)
plot(low_lr2, color = color.green, title = "LR low", style = plot.style_line, linewidth = 1)

//RSI
rsi_value = input(50, title="RSI Neutral ")
length = input(14, title="RSI Length")
ep = 2 * length - 1
auc = ema( max( src - src[1], 0 ), ep )
adc = ema( max( src[1] - src, 0 ), ep )
y = (length - 1) * ( adc * rsi_value / (100-rsi_value) - auc)
rsi_lvl = iff( y >= 0, src + y, src + y * (100-rsi_value)/rsi_value )
plot( rsi_lvl, title="RSI", style=plot.style_cross, color=color.gray, linewidth=3)

//barcolor(color=(lrc<rsi_lvl and close>rsi_lvl)?color.red:color.lime)